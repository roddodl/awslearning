{ "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "AWS CloudFormation template to create a new ECS First Run stack",

  "Parameters" : {
 
    "VpcAvailabilityZones" : {
      "Type" : "CommaDelimitedList",
      "Description" : "Optional : Comma-delimited list of two VPC availability zones in which to create subnets",
      "Default" : ""
    },
    "VpcCidrBlock" : {
      "Type" : "String",
      "Description" : "Optional - CIDR/IP range for the VPC",
      "Default" : "10.0.0.0/16"
    },
    "SubnetCidrBlock1" : {
      "Type" : "String",
      "Description" : "Optional - CIDR/IP range for the VPC",
      "Default" : "10.0.0.0/24"
    },
    "SubnetCidrBlock2" : {
      "Type" : "String",
      "Description" : "Optional - CIDR/IP range for the VPC",
      "Default" : "10.0.1.0/24"
    },
    "SubnetCidrBlock3" : {
      "Type" : "String",
      "Description" : "Optional - CIDR/IP range for the VPC",
      "Default" : "10.0.7.0/24"
    },
    "SubnetCidrBlock4" : {
      "Type" : "String",
      "Description" : "Optional - CIDR/IP range for the VPC",
      "Default" : "10.0.8.0/24"
    }
  },

  "Conditions" : {
    "UseSpecifiedVpcAvailabilityZones" : { "Fn::Not" : [ { "Fn::Equals" : [ { "Fn::Join" : [ "", { "Ref" : "VpcAvailabilityZones" } ] }, "" ] } ] }
  },

  "Resources" : {

    "Vpc" : {
      "Type" : "AWS::EC2::VPC",
      "Properties" : {
        "CidrBlock" : { "Ref" : "VpcCidrBlock" },
        "EnableDnsSupport" : "true",
        "EnableDnsHostnames" : "true"
      }
    },

    "PubSubnetAz1" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "Vpc" },
        "CidrBlock" : { "Ref" : "SubnetCidrBlock1" },
        "AvailabilityZone" : {
          "Fn::If" : [
            "UseSpecifiedVpcAvailabilityZones",
            { "Fn::Select" : [ "0", { "Ref" : "VpcAvailabilityZones" } ] },
            { "Fn::Select" : [ "0", { "Fn::GetAZs" : { "Ref" : "AWS::Region" } } ] }
          ]
        }
      }
    },

    "PubSubnetAz2" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "Vpc" },
        "CidrBlock" : { "Ref" : "SubnetCidrBlock2" },
        "AvailabilityZone" : {
          "Fn::If" : [
            "UseSpecifiedVpcAvailabilityZones",
            { "Fn::Select" : [ "1", { "Ref" : "VpcAvailabilityZones" } ] },
            { "Fn::Select" : [ "1", { "Fn::GetAZs" : { "Ref" : "AWS::Region" } } ] }
          ]
        }
      }
    },

    "PubSubnetAz3" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "Vpc" },
        "CidrBlock" : { "Ref" : "SubnetCidrBlock3" },
        "AvailabilityZone" : "us-east-1b"
         
      }
    },

    "PubSubnetAz4" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "Vpc" },
        "CidrBlock" : { "Ref" : "SubnetCidrBlock4" },
        "AvailabilityZone" : "us-east-1c"
      }
    },


    "InternetGateway" : {
      "Type" : "AWS::EC2::InternetGateway"
    },

    "AttachGateway" : {
      "Type" : "AWS::EC2::VPCGatewayAttachment",
      "Properties" : {
        "VpcId" : { "Ref" : "Vpc" },
        "InternetGatewayId" : { "Ref" : "InternetGateway" }
      }
    },

    "RouteViaIgw" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : {"Ref" : "Vpc"}
      }
    },

    "PublicRouteViaIgw" : {
      "Type" : "AWS::EC2::Route",
      "DependsOn" : "AttachGateway",
      "Properties" : {
        "RouteTableId" : { "Ref" : "RouteViaIgw" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : { "Ref" : "InternetGateway" }
      }
    },

    "PubSubnet1RouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PubSubnetAz1" },
        "RouteTableId" : { "Ref" : "RouteViaIgw" }
      }
    },

    "PubSubnet2RouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PubSubnetAz2" },
        "RouteTableId" : { "Ref" : "RouteViaIgw" }
      }
    },

    "PubSubnet3RouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PubSubnetAz3" },
        "RouteTableId" : { "Ref" : "RouteViaIgw" }
      }
    },

    "PubSubnet4RouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PubSubnetAz4" },
        "RouteTableId" : { "Ref" : "RouteViaIgw" }
      }
    }
  },

  "Outputs" : {
  }

}
